/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 06 18:45:24 GMT 2016
 */

package se.cag.labs.usermanager;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.cag.labs.usermanager.NewUser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NewUser_ESTest extends NewUser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      String string0 = newUser0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NewUser newUser0 = new NewUser(" W6I?fh2WF`#FTI", " W6I?fh2WF`#FTI", " W6I?fh2WF`#FTI");
      String string0 = newUser0.getPassword();
      assertEquals(" W6I?fh2WF`#FTI", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      Integer integer0 = new Integer(1577);
      boolean boolean0 = newUser0.canEqual(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NewUser newUser0 = new NewUser("=J'N$Y0", "=J'N$Y0", "");
      String string0 = newUser0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      NewUser newUser1 = new NewUser();
      assertTrue(newUser1.equals((Object)newUser0));
      
      newUser1.setPassword("NewUser(password=null)");
      boolean boolean0 = newUser1.equals(newUser0);
      assertFalse(newUser1.equals((Object)newUser0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      NewUser newUser1 = new NewUser();
      boolean boolean0 = newUser0.equals(newUser1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewUser newUser0 = new NewUser("RsSi#0N]*J=$-a#F", "RsSi#0N]*J=$-a#F", "RsSi#0N]*J=$-a#F");
      NewUser newUser1 = new NewUser("RsSi#0N]*J=$-a#F", "RsSi#0N]*J=$-a#F", "RsSi#0N]*J=$-a#F");
      boolean boolean0 = newUser0.equals(newUser1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      boolean boolean0 = newUser0.equals("NewUser(password=null)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      boolean boolean0 = newUser0.equals(newUser0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      NewUser newUser1 = new NewUser();
      assertTrue(newUser1.equals((Object)newUser0));
      
      newUser1.setPassword("NewUser(password=null)");
      boolean boolean0 = newUser0.equals(newUser1);
      assertFalse(newUser1.equals((Object)newUser0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      newUser0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NewUser newUser0 = new NewUser(" W6I?fh2WF`#FTI", " W6I?fh2WF`#FTI", " W6I?fh2WF`#FTI");
      newUser0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NewUser newUser0 = new NewUser("=J'N$Y0", "=J'N$Y0", "");
      String string0 = newUser0.toString();
      assertEquals("NewUser(password=)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NewUser newUser0 = new NewUser();
      boolean boolean0 = newUser0.canEqual(newUser0);
      assertTrue(boolean0);
  }
}
