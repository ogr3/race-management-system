/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 06 18:47:12 GMT 2016
 */

package se.cag.labs.usermanager;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.cag.labs.usermanager.Token;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Token_ESTest extends Token_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Token token0 = new Token();
      String string0 = token0.getToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token token0 = new Token();
      boolean boolean0 = token0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Token token0 = new Token("_Wnncz8F(XA");
      Token token1 = new Token("_Wnncz8F(XA");
      boolean boolean0 = token0.equals(token1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Token token0 = new Token();
      token0.setToken("Token(token=null)");
      Token token1 = new Token();
      boolean boolean0 = token1.equals(token0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Token token0 = new Token();
      Token token1 = new Token();
      boolean boolean0 = token0.equals(token1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Token token0 = new Token("_Wnncz8F(XA");
      boolean boolean0 = token0.equals("_Wnncz8F(XA");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Token token0 = new Token();
      boolean boolean0 = token0.equals(token0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Token token0 = new Token("_Wnncz8F(XA");
      Token token1 = new Token();
      boolean boolean0 = token0.equals(token1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Token token0 = new Token();
      token0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Token token0 = new Token("oeF?S<B;TKY.DMdB");
      String string0 = token0.toString();
      assertEquals("Token(token=oeF?S<B;TKY.DMdB)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token token0 = new Token();
      token0.setToken("Token(token=null)");
      token0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token token0 = new Token("oeF?S<B;TKY.DMdB");
      String string0 = token0.getToken();
      assertEquals("oeF?S<B;TKY.DMdB", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token("oeF?S<B;TKY.DMdB");
      token0.setToken("");
      String string0 = token0.getToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = new Token("oeF?S<B;TKY.DMdB");
      boolean boolean0 = token0.canEqual(token0);
      assertTrue(boolean0);
  }
}
