/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 06 18:45:48 GMT 2016
 */

package se.cag.labs.usermanager;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import se.cag.labs.usermanager.UserInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserInfo_ESTest extends UserInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      userInfo0.setUserId("/m");
      String string0 = userInfo0.getUserId();
      assertEquals("/m", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      userInfo0.setUserId("");
      String string0 = userInfo0.getUserId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("", "t:M';!J9");
      String string0 = userInfo0.getDisplayName();
      assertEquals("", userInfo0.getUserId());
      assertEquals("t:M';!J9", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("", "");
      String string0 = userInfo0.getDisplayName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      boolean boolean0 = userInfo0.canEqual(userInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("qy/a", "DJ^)&w,i\"_;N");
      userInfo0.canEqual("DJ^)&w,i\"_;N");
      assertEquals("qy/a", userInfo0.getUserId());
      assertEquals("DJ^)&w,i\"_;N", userInfo0.getDisplayName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      String string0 = userInfo0.getDisplayName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      String string0 = userInfo0.getUserId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("", "");
      UserInfo userInfo1 = new UserInfo("", "");
      boolean boolean0 = userInfo0.equals(userInfo1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      userInfo0.setUserId("");
      UserInfo userInfo1 = new UserInfo("", "pF}+-.!u96T");
      boolean boolean0 = userInfo1.equals(userInfo0);
      assertFalse(boolean0);
      assertEquals("pF}+-.!u96T", userInfo1.getDisplayName());
      assertEquals("", userInfo1.getUserId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("vx~h", "vx~h");
      UserInfo userInfo1 = new UserInfo();
      boolean boolean0 = userInfo0.equals(userInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      UserInfo userInfo1 = new UserInfo();
      boolean boolean0 = userInfo0.equals(userInfo1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      boolean boolean0 = userInfo0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("", "");
      boolean boolean0 = userInfo0.equals(userInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      userInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("!#C", "+oHT2RwbZt)gf[F~kj;");
      userInfo0.hashCode();
      assertEquals("!#C", userInfo0.getUserId());
      assertEquals("+oHT2RwbZt)gf[F~kj;", userInfo0.getDisplayName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo("", "");
      String string0 = userInfo0.toString();
      assertEquals("UserInfo(userId=, displayName=)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      userInfo0.setUserId("");
      UserInfo userInfo1 = new UserInfo("", "pF;+-.!u97T");
      boolean boolean0 = userInfo0.equals(userInfo1);
      assertFalse(boolean0);
      assertEquals("", userInfo1.getUserId());
      assertEquals("pF;+-.!u97T", userInfo1.getDisplayName());
      assertFalse(userInfo1.equals((Object)userInfo0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      UserInfo userInfo1 = new UserInfo("", "pF;+-.!u97T");
      boolean boolean0 = userInfo0.equals(userInfo1);
      assertEquals("", userInfo1.getUserId());
      assertEquals("pF;+-.!u97T", userInfo1.getDisplayName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserInfo userInfo0 = new UserInfo();
      userInfo0.setDisplayName("");
      assertNull(userInfo0.getUserId());
  }
}
